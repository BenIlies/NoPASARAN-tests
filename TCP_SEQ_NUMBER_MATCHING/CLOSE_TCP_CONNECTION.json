{
  "id": "CLOSE_TCP_CONNECTION",
  "initial": "INITIALIZING",
  "states": {
    "INITIALIZING": {
      "on": {
        "STARTED": [
          {
            "target": "LOADING_VARIABLES",
            "actions": [],
            "internal": false
          }
        ]
      }
    },
    "LOADING_VARIABLES": {
      "entry": [
        {
          "type": "get_from_file (variables role) (role)"
        },
        {
          "type": "get_from_file (variables client) (client)"
        },
        {
          "type": "get_from_file (variables server) (server)"
        },
        {
          "type": "get_parameters (ctrl pkt queue)"
        },
        {
          "type": "get_from_file (variables fin/ack) (fin/ack)"
        },
        {
          "type": "get_from_file (variables ack) (ack)"
        },
        {
          "type": "get_from_file (variables fin) (fin)"
        },
        {
          "type": "done"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "SENDING FIN",
            "cond": "equal (role client)",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          },
          {
            "target": "LISTENING",
            "cond": "equal (role server)",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          },
          {
            "target": "LOADING_VARIABLES",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ],
            "internal": false
          }
        ]
      }
    },
    "SENDING FIN": {
      "entry": [
        {
          "type": "set_TCP_flags (pkt fin) (pkt)"
        },
        {
          "type": "send (pkt)"
        }
      ],
      "on": {
        "PACKET_SENT": [
          {
            "target": "LISTENING",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          }
        ]
      }
    },
    "LISTENING": {
      "entry": [
        {
          "type": "set (5) (timeout)"
        },
        {
          "type": "wait_packet_signal (queue timeout)"
        }
      ],
      "on": {
        "PACKET_AVAILABLE": [
          {
            "target": "GETTING_FLAGS",
            "actions": [
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          }
        ],
        "TIMEOUT": [
          {
            "target": "TIMEOUT ENDING",
            "actions": [],
            "internal": false
          }
        ]
      }
    },
    "GETTING_FLAGS": {
      "entry": [
        {
          "type": "get_TCP_flags (queue) (flags)"
        },
        {
          "type": "set (TCP_PACKET_RECEIVED) (event)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "TCP_PACKET_RECEIVED": [
          {
            "target": "HANDLING_FIN",
            "cond": "equal (flags fin)",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          },
          {
            "target": "HANDLING_ACK",
            "cond": "equal (flags ack)",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          },
          {
            "target": "HANDLING_FIN_ACK",
            "cond": "equal (flags fin/ack)",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          }
        ]
      }
    },
    "TIMEOUT ENDING": {
      "entry": [
        {
          "type": "set (TIMEOUT) (event)"
        },
        {
          "type": "set (NULL) (NULL)"
        },
        {
          "type": "return_values (event NULL NULL)"
        }
      ]
    },
    "HANDLING_FIN": {
      "entry": [
        {
          "type": "get_first_element (queue) (client_pkt)"
        },
        {
          "type": "get_IP_src (client_pkt) (client_ip)"
        },
        {
          "type": "set_IP_dst (pkt client_ip) (pkt)"
        },
        {
          "type": "get_TCP_sport (client_pkt) (client_port)"
        },
        {
          "type": "set_TCP_dport (pkt client_port) (pkt)"
        },
        {
          "type": "set_TCP_automatic_packet_seq (pkt) (pkt)"
        },
        {
          "type": "set_TCP_automatic_packet_ack (pkt queue) (pkt)"
        },
        {
          "type": "set_TCP_flags (pkt fin/ack) (pkt)"
        },
        {
          "type": "pop (queue)"
        },
        {
          "type": "send (pkt)"
        }
      ],
      "on": {
        "PACKET_SENT": [
          {
            "target": "LISTENING",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              },
              {
                "type": "assign (ack) (ack)"
              },
              {
                "type": "assign (fin/ack) (fin/ack)"
              },
              {
                "type": "assign (fin) (fin)"
              }
            ],
            "internal": false
          }
        ]
      }
    },
    "HANDLING_ACK": {
      "entry": [
        {
          "type": "pop (queue)"
        },
        {
          "type": "done"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "ENDING",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              }
            ],
            "internal": false
          }
        ]
      }
    },
    "HANDLING_FIN_ACK": {
      "entry": [
        {
          "type": "set_TCP_automatic_packet_seq (pkt) (pkt)"
        },
        {
          "type": "set_TCP_automatic_packet_ack (pkt queue) (pkt)"
        },
        {
          "type": "set_TCP_flags (pkt ack) (pkt)"
        },
        {
          "type": "pop (queue)"
        },
        {
          "type": "send (pkt)"
        }
      ],
      "on": {
        "PACKET_SENT": [
          {
            "target": "ENDING",
            "actions": [
              {
                "type": "assign (pkt) (pkt)"
              },
              {
                "type": "assign (queue) (queue)"
              }
            ],
            "internal": false
          }
        ]
      }
    },
    "ENDING": {
      "entry": [
        {
          "type": "set (DONE) (event)"
        },
        {
          "type": "return_values (event pkt queue)"
        }
      ]
    }
  }
}
